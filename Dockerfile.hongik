FROM node:16-alpine AS builder
#baseImage설정 - Node로 세팅함 (node에서 이미 만들어둔 image 있음)

WORKDIR /app
#어떤 디렉토리의 어플리케이션을 사용할건지?
COPY package.json ./
COPY yarn.lock ./
#프로젝트의 의존성 파일을 모두 가져옴 
RUN npm install yarn --global --force
RUN yarn install --immutable --immutable-cache --check-cache
# 패키지에 있는 것 모두 설치 

# Copies everything over to Docker environment
COPY . ./
RUN rm -rf apps/hongik

RUN yarn install
# RUN npm run build
RUN yarn hongik:build
RUN rm -rf apps/hongik/.next/cache
#캐시 삭제! 

#Stage 2
#######################################
#pull the official nginx:1.19.0 base image
# FROM nginx:1.19.0
#copies React to the container directory
# Set working directory to nginx resources directory
# WORKDIR /usr/share/nginx/html
# COPY ./nginx/ticket.conf /etc/nginx/conf.d/default.conf
# Remove default nginx static resources
# RUN rm -rf ./usr/share/nginx/html/*
# Copies static resources from builder stage
# COPY --from=builder /app/build /usr/share/nginx/html/
# Containers run nginx with global directives and daemon off
EXPOSE 3000
CMD ["yarn", "hongik:start"]